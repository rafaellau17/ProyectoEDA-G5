/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Screens;

import DataClasses.DataTramite;
import DataClasses.Documento;
import DataClasses.Fecha;
import DataManagers.TramiteManager;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import tda.Cola;
import tda.Pila;
import java.util.Calendar;
import static java.util.Calendar.*;
import java.util.GregorianCalendar;

/**
 *
 * @author MARIEL
 */
public class TramiteBuscadoScreen extends javax.swing.JFrame {

    /**
     * Creates new form TramiteBuscadoScreen
     */
    private DataTramite tramite;
    private DefaultTableModel modelo_1;
    private DefaultTableModel modelo_2;
    public TramiteBuscadoScreen(DataTramite tram) {
        initComponents();
        this.tramite = tram;
        fechaIni_label.setText("FECHA INICIAL: "+tramite.getFechaIni().toString());

        desc_label.setText("DESCRIPCION: "+tramite.getDescripcion());

        if (tramite.isTerminado()) {
            terminado_label.setText("TERMINADO: TRAMITE TERMINADO");
        }
        else{
            terminado_label.setText("TERMINADO: TRAMITE NO TERMINADO");
        }
        
        if (tramite.getFechaFin()!=null) {
            fechaFin_label.setText("FECHA FIN: " +tramite.getFechaFin().toString());
        }
        else{
            fechaFin_label.setText("FECHA FIN: NA" );
        }
        
        modelo_1 = new DefaultTableModel();
        modelo_1.addColumn("NRO");
        modelo_1.addColumn("DOCUMENTO");
        
        modelo_2 = new DefaultTableModel();
        modelo_2.addColumn("NRO");
        modelo_2.addColumn("DEPENDENCIA");
        
        this.documentosTable.setModel(modelo_1);
        this.dependenciasTable.setModel(modelo_2);        
        
        this.documentosTable.getColumnModel().getColumn(0).setPreferredWidth(60);
        this.dependenciasTable.getColumnModel().getColumn(0).setPreferredWidth(60);               
        this.documentosTable.getColumnModel().getColumn(1).setPreferredWidth(260);
        this.dependenciasTable.getColumnModel().getColumn(1).setPreferredWidth(260);         
    
        if (!TramiteManager.mostrarDependencias(tramite).esVacia()) {
            poblarDependenciasTable();
        }
        if (!TramiteManager.mostrarDocumentos(tramite).esVacia()) {
            poblarDocumentosTable();
        }    
    }
    
    private void poblarDependenciasTable(){
        int filas = this.dependenciasTable.getRowCount();
        for(int i=0;i<filas;i++)
        {
            modelo_2.removeRow(0);
        }
        
        Pila<String> pila = TramiteManager.mostrarDependencias(tramite);
        Pila<String> aux = new Pila<>();
        
        while(!pila.esVacia()){
            String dependencia = pila.desencolar();
            aux.apilar(dependencia);
        }
        
        int cont = 1;
        while(!aux.esVacia()){
            String dependencia = aux.desencolar();
            depend_label.setText("ULTIMA DEPENDENCIA: "+dependencia);
            modelo_2.addRow(new Object[]{cont, dependencia});
            cont++;
            pila.apilar(dependencia);
        }
    }
    
    private void poblarDocumentosTable(){
        int filas = this.documentosTable.getRowCount();
        for(int i=0;i<filas;i++)
        {
            modelo_1.removeRow(0);
        }
        
        Cola<Documento> cola = TramiteManager.mostrarDocumentos(tramite);
        Cola<Documento> aux = new Cola<>();

        int cont = 1;
        while (!cola.esVacia()){
            Documento doc = cola.desencolar();
            modelo_1.addRow(new Object[]{cont,doc.getItem()});
            aux.encolar(doc);
            cont++;
        }
        
        while (!aux.esVacia()){
            cola.encolar(aux.desencolar());
        }        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        finTramPopUp_OptionPane = new javax.swing.JOptionPane();
        fechaIni_label = new javax.swing.JLabel();
        fechaFin_label = new javax.swing.JLabel();
        desc_label = new javax.swing.JLabel();
        depend_label = new javax.swing.JLabel();
        finTram_boton = new javax.swing.JButton();
        terminado_label = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        agregarDepend_boton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dependenciasTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        documentosTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);
        setSize(new java.awt.Dimension(850, 500));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        fechaIni_label.setText("FECHA DE INICIO:");

        fechaFin_label.setText("FECHA DE FIN:");

        desc_label.setText("DESCRIPCION:");
        desc_label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        depend_label.setText("ULTIMA DEPENDENCIA: ");

        finTram_boton.setText("FINALIZAR TRAMITE");
        finTram_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finTram_botonActionPerformed(evt);
            }
        });

        terminado_label.setText("TERMINADO:");

        jButton1.setText("REGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        agregarDepend_boton.setText("AGREGAR \nDEPENDENCIA");
        agregarDepend_boton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        agregarDepend_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarDepend_botonActionPerformed(evt);
            }
        });

        dependenciasTable.setAutoCreateRowSorter(true);
        dependenciasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dependenciasTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        dependenciasTable.setShowVerticalLines(true);
        jScrollPane1.setViewportView(dependenciasTable);

        documentosTable.setAutoCreateRowSorter(true);
        documentosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        documentosTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        documentosTable.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        documentosTable.setShowGrid(false);
        documentosTable.setShowVerticalLines(true);
        jScrollPane2.setViewportView(documentosTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(desc_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(terminado_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(depend_label, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addComponent(fechaFin_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fechaIni_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(finTram_boton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(agregarDepend_boton)
                                .addGap(67, 67, 67)))))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(agregarDepend_boton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(fechaIni_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fechaFin_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(depend_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(terminado_label)
                        .addGap(28, 28, 28)
                        .addComponent(desc_label, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(finTram_boton))
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void finTram_botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finTram_botonActionPerformed
        int response = JOptionPane.showConfirmDialog(rootPane, "¿Desea finalizar el tramite?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {
            tramite.setTerminado(true);
            Calendar calendar = new GregorianCalendar();
            int aux = calendar.get(YEAR);
            int aux2 = calendar.get(MONTH)+1;
            int aux3 = calendar.get(DATE);
            Fecha fechafin = new Fecha(aux3, aux2, aux);
            tramite.setFechaFin(fechafin);
            terminado_label.setText("TERMINADO: TRAMITE TERMINADO");
            fechaFin_label.setText("FECHA FIN: " +fechafin);        
        }
        
    }//GEN-LAST:event_finTram_botonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ScreensManager.irAtras(this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void agregarDepend_botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarDepend_botonActionPerformed
        String dependencias[] = {"DUSAR", "Facultad de Ingeniería", "Facultad de Derecho", "Facultad de Psicología", "Facultad de C.E. y E.", "Facultad de Comunicación", "Instituto de Investigación Científica", "Oficina de Innovación y Calidad Educativa", "Centro de Empleabilidad", "Centro de Idiomas", "Departamento de Orientación Psicopedagógica"};
        JComboBox combobox = new JComboBox(dependencias);
        
        int input = JOptionPane.showConfirmDialog(this, combobox, "Seleccione una dependencia", JOptionPane.DEFAULT_OPTION);
        
        if(input == JOptionPane.OK_OPTION){
            String str = (String)combobox.getSelectedItem();
            TramiteManager.ingresarDependencia(tramite, str);
            poblarDependenciasTable();
            poblarDocumentosTable();
        }
    }//GEN-LAST:event_agregarDepend_botonActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        poblarDependenciasTable();
        poblarDocumentosTable();
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TramiteBuscadoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TramiteBuscadoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TramiteBuscadoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TramiteBuscadoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Fecha aux2 = new Fecha(00, 00, 2000);
                DataTramite aux = new DataTramite(aux2, "", null);
                new TramiteBuscadoScreen(aux).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarDepend_boton;
    private javax.swing.JLabel depend_label;
    private javax.swing.JTable dependenciasTable;
    private javax.swing.JLabel desc_label;
    private javax.swing.JTable documentosTable;
    private javax.swing.JLabel fechaFin_label;
    private javax.swing.JLabel fechaIni_label;
    private javax.swing.JOptionPane finTramPopUp_OptionPane;
    private javax.swing.JButton finTram_boton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel terminado_label;
    // End of variables declaration//GEN-END:variables
}
